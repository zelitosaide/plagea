// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  email     String  @unique 
  role      Role    @default(USER)
  password  Password?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  salt      String
  hash      String
  accountId String  @db.ObjectId @unique
  account   Account @relation(fields: [accountId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}





























model Usuario {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  email     String  @unique
  password  String
  perfil  Perfil?
}

model Perfil {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  name String
  gender String
  usuarioId String    @db.ObjectId @unique
  usuario Usuario @relation(fields: [usuarioId], references: [id])
}

model Post {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  slug     String    @unique
  title    String
  body     String
  author   User      @relation(fields: [authorId], references: [id])
  authorId String    @db.ObjectId
  comments Comment[]
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  name    String?
  address Address?
  posts   Post[]
}

model Comment {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  comment String
  post    Post   @relation(fields: [postId], references: [id])
  postId  String @db.ObjectId
}

// Address is an embedded document
type Address {
  street String
  city   String
  state  String
  zip    String
}